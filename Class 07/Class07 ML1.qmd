---
title: "Class 07 ML1"
author: "Neva Olliffe (PID A69026930)"
format: pdf
---

#Clustering

We're starting with k-means clustering, one of the most prevalent of clustering methods. It's fast and does a lot for you. 

Let's make up some data. 
```{r}
tmp <- c(rnorm(30, mean = 3), rnorm(30, mean = -3))
x <- cbind(x = tmp, y = rev(tmp))
plot(x)
```

The main kmeans function is kmeans.
```{r}
k <- kmeans(x, centers = 2, nstart = 20)
k
```
> Q1: Get info on how many points are in each cluster.

```{r}
k$size
```

> Q2. The clustering result or membership vector? 

```{r}
k$cluster
```
> Q3. What is the center of each cluster? 

```{r}
k$centers
```
> Q4. Make a plot of our data colored by clustering reuslts with optional cluster centers displayed.

```{r}
library(ggplot2)

plot(x, col = k$cluster, pch = 16)
points(k$centers, col = "blue", pch = 15)
```


> Q5. Run kmeans with cluster = 3 and plot as above.

```{r}
k3 <- kmeans(x, centers = 3, nstart = 20)

plot(x, col = k3$cluster, pch = 16)
points(k3$centers, col = "blue", pch = 15)
```

K means always returns a result, even if no obvious groupings. 

# Hierarchical clustering
This clustering method can reveal the structure in data rather than imposing an arbitrary structure (like k-means).

The main function in "base" R is called `hclust()`. It requires a distance matrix as input, not the raw data itself.

```{r}
hc <- hclust(dist(x))
hc

```
```{r}
plot(hc)
```

```{r}
plot(hc)
abline(h=8, col = "red")
```


The function to get our clusters from hclust is called `cutree()`. 
```{r}
cutree(hc, h=8)
```
> Q. Plot hclust results in terms of our data colored by cluster membership.

```{r}
plot(x, col = cutree(hc, h=8))
```

# Principal component analysis (PCA)
```{r}
url <- "https://tinyurl.com/UK-foods"
x <- read.csv(url, row.name = 1)
dim(x)
head(x)
```

```{r}
barplot(as.matrix(x), beside=F, col=rainbow(nrow(x)))
+ barplot(as.matrix(x), beside=T, col=rainbow(nrow(x)))
```

> Q3: Changing what optional argument in the above barplot() function results in the following plot?

Changing `beside` from `T` to `F` generates this plot. 

>Q5: Generating all pairwise plots may help somewhat. Can you make sense of the following code and resulting figure? What does it mean if a given point lies on the diagonal for a given plot?

```{r}
pairs(x, col=rainbow(10), pch=16)
```
If a given point lies on the diagonal, it means that both countries consume the same amount of that particular type of food. So, points above the diagonal are consumed more in the country on the y axis, while those below are consumed more by the country on the x axis.

> Q6. What is the main differences between N. Ireland and the other countries of the UK in terms of this data-set?

It is the dark blue point above the diagonal, but it's hard to tell which food type that is. 

# PCA to the rescue
The main function for PCA in base R is called `prcomp()`. 

It wants the transpose (using `t()`) of our data table for analysis.
```{r}
pca <- prcomp(t(x))
summary(pca)
```

One of the main results is the "score plot", aka PC plot, etc.
```{r}
plot(pca$x[,1], pca$x[,2])
text(pca$x[,1], pca$x[,2], colnames(x))
```

>Q7 & Q8

```{r}
# Plot PC1 vs PC2
plot(pca$x[,1], pca$x[,2], xlab="PC1", ylab="PC2", xlim=c(-270,500))
text(pca$x[,1], pca$x[,2], colnames(x), col=c("yellow", "red", "blue", "green"))
```

>Q9 

```{r}
par(mar=c(10, 3, 0.35, 0))
barplot( pca$rotation[,1], las=2 )
```

```{r}
par(mar=c(10, 3, 0.35, 0))
barplot( pca$rotation[,2], las=2 )
```
Soft drink consumption is pushing N. Ireland and Wales to the positive side, while differences in fresh potato consumption are pushing Wales, England, and Scotland away from N. Ireland. 

## Using ggplot
```{r}
library(ggplot2)
df <- as.data.frame(pca$x)
df_lab <- tibble::rownames_to_column(df, "Country")

# Our first basic plot
ggplot(df_lab) + 
  aes(PC1, PC2, col=Country) + 
  geom_point()
```
```{r}
ggplot(df_lab) + 
  aes(PC1, PC2, col=Country, label=Country) + 
  geom_hline(yintercept = 0, col="gray") +
  geom_vline(xintercept = 0, col="gray") +
  geom_point(show.legend = FALSE) +
  geom_label(hjust=1, nudge_x = -10, show.legend = FALSE) +
  expand_limits(x = c(-300,500)) +
  xlab("PC1 (67.4%)") +
  ylab("PC2 (28%)") +
  theme_bw()
```
```{r}
ld <- as.data.frame(pca$rotation)
ld_lab <- tibble::rownames_to_column(ld, "Food")

ggplot(ld_lab) +
  aes(PC1, Food) +
  geom_col() 
```
```{r}
ggplot(ld_lab) +
  aes(PC1, reorder(Food, PC1), bg=PC1) +
  geom_col() + 
  xlab("PC1 Loadings/Contributions") +
  ylab("Food Group") +
  scale_fill_gradient2(low="orange", mid="grey", high="turquoise", guide=NULL) +
  theme_bw()
```

```{r}
url2 <- "https://tinyurl.com/expression-CSV"
rna.data <- read.csv(url2, row.names=1)
head(rna.data)
```
>Q10 

```{r}
dim(rna.data)
```

There are 100 genes and 10 samples.
