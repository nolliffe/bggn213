---
title: "Class 09 mini-project"
author: "Neva Olliffe PID: A69026930"
format: pdf
---

# Load data
```{r}
# Save your input data file into your Project directory
fna.data <- "WisconsinCancer.csv"

# Complete the following code to input the data and store as wisc.df
wisc.df <- read.csv(fna.data, row.names=1)
head(wisc.df)
```
### Separate the diagnosis from the rest of the data
```{r}
# We can use -1 here to remove the first column
wisc.data <- wisc.df[,-1]
wisc.data <- wisc.data[,-31]

# Create diagnosis vector for later 
diagnosis <- as.factor(wisc.df[,1])
```

## Q1. How many observations are in this dataset?
```{r}
dim(wisc.data)
```
569 patients are included in this dataset. 

## Q2. How many of the observations have a malignant diagnosis?
```{r}
sum(wisc.df$diagnosis == "M")
```
212 patients have a malignant diagnosis. 

Q3. How many variables/features in the data are suffixed with _mean?
```{r}
length(grep("_mean", colnames(wisc.df)))

```
10 different columns are suffixed with _mean

# 2. PCA
```{r}
# Check column means and standard deviations
colMeans(wisc.data)

print("SD")
apply(wisc.data,2,sd)

```
```{r}
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(wisc.data, scale = T)

# Look at summary of results
summary(wisc.pr)
```

## Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?
44.27% of the variance.

```{r}
v <- summary(wisc.pr)
pcvar <- v$importance[3,]
which(pcvar>= 0.7)[1]
```


## Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?
The 3 PCs are required to describe 70% of variance.


```{r}
v <- summary(wisc.pr)
pcvar <- v$importance[3,]
which(pcvar>= 0.9)[1]
```

## Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?
7 PCs are required to describe 90% of the variance of the data.


```{r}
biplot(wisc.pr)
```
## Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?
This plot is very difficult to understand. All of the data points are labeled so it's very hard to see them, and the labeling of the vectors is confusing. 

```{r}
# Change diagnosis to color 


# Scatter plot observations by components 1 and 2
plot(wisc.pr$x[,1:2] , col = diagnosis, 
     xlab = "PC1", ylab = "PC2")
```



```{r}
# Repeat for components 1 and 3
plot(wisc.pr$x[,1], wisc.pr$x[,3], col = diagnosis, 
     xlab = "PC1", ylab = "PC3")

```
## Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?
PC1 is doing more separation of benign and malignant factors than either PC1 or PC3. In both plots, the vast majority of sample separation is on the x axis. 

```{r}
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col=diagnosis) + 
  geom_point()

```

```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)
```
```{r}
# Variance explained by each principal component: pve
pve <- pr.var / sum(pr.var)

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

```{r}
## ggplot based graph
#install.packages("factoextra")
library(factoextra)
fviz_eig(wisc.pr, addlabels = TRUE)
```

## Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean? This tells us how much this original feature contributes to the first PC.

The loading vector for concave.points_mean is -0.26086. Because this factor is negative and malignant cells are plotting negatively on the x axis, this tells us that a high mean of concave points contributes to a malignant diagnosis. 

```{r}
wisc.pr$rotation["concave.points_mean",1]
```

# 3. Hierarchical clustering
```{r}
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)

# Find Euclidian distances
data.dist <- dist(data.scaled)

# Perform clustering
wisc.hclust <- hclust(data.dist, method = "complete")

```



## Q10. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

```{r}
sorted_clust <- sort(-wisc.hclust$height)

plot(wisc.hclust)
abline(h = -sorted_clust[4], col="red", lty=2)
```

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k = 4)
table(wisc.hclust.clusters, diagnosis)
```

## Q11. OPTIONAL: Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10? How do you judge the quality of your result in each case?


## Q12. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.
I prefer `ward.D2`, which is easier to understand visually as a plot and gives the cleanest separation between benign and malignant samples using only 2 clusters. 

```{r}
methods <- c("single", "complete", "average", "ward.D2")

for (m in methods) {
  # Re-cluster for each method
  temp.wisc.hclust <- hclust(data.dist, method = m)
  # plot each method
  plot(temp.wisc.hclust, main = paste("method =", m))
  
  # Make the table for 2 clusters
  temp.wisc.hclust.clusters <- cutree(temp.wisc.hclust, k = 2)
  
  print(paste("method =",m))
  print(table(temp.wisc.hclust.clusters, diagnosis))
}
```
# 4. Combining methods 
```{r}

# Determine how many PCs are required to explain at least 90% of the variance.
pcvar<- summary(wisc.pr)$importance[3,]
which(pcvar>=0.9)[1]
```
```{r}
## Redo euclidean distances for pr data
wisc.pr.dist <- dist(wisc.pr$x[,1:7])

# Perform clustering and plot
wisc.pr.hclust <- hclust(wisc.pr.dist, method = "ward.D2")
plot(wisc.pr.hclust)
```

```{r}
##Check clustering results compared to diagnosis
grps <- cutree(wisc.pr.hclust, k=2)
table(grps, diagnosis)
```

```{r}
# Adjust the colors
g <- as.factor(grps)
levels(g)
g <- relevel(g, 2)
levels(g)


# Plot results from pca then cluster
plot(wisc.pr$x[,1:2], col=g, main = "Color by clust")
plot(wisc.pr$x[,1:2], col=diagnosis, main = "Color by diagnosis")
```

```{r}
wisc.pr.hclust.2clusters <- cutree(wisc.pr.hclust, k=2)
# Compare to actual diagnoses
table(wisc.pr.hclust.2clusters, diagnosis)
```
## Q13. How well does the newly created model with four clusters separate out the two diagnoses?
This model separates out fiarly well, giving us 28 false positives and 24 false negatives.

## Q14. How well do the hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km$cluster and wisc.hclust.clusters) with the vector containing the actual diagnoses.

```{r}
methods <- c("single", "complete", "average", "ward.D2")

for (m in methods) {
  # Re-cluster for each method
  temp.wisc.hclust <- hclust(data.dist, method = m)
  
  # Make the table for 4 clusters
  temp.wisc.hclust.clusters <- cutree(temp.wisc.hclust, k = 4)
  
  print(paste("method =",m))
  print(table(temp.wisc.hclust.clusters, diagnosis))
}
```
When clustering into 4 groups, the `single` and `average` methods perform very poorly - they put most benign and malignant samples in the same cluster. The `complete` and `ward.D2` clusters perform better, but it's hard to say which is best, since both generate a cluster with mostly benign and a cluster with mostly malignant, and then 2 clusters with very few samples. 

#6. Prediction 

```{r}
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```
```{r}
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```
## Q16. Which of these new patients should we prioritize for follow up based on your results?
We should prioritize patient 2 because they are clustering with the patient samples diagnosed malignant. 







